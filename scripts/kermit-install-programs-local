#!/bin/bash

# install locally, not as super user

# Non-sudo stuff
##################

# Python packages
#-----------------

cheese_shop() {
    echo "installing from the Cheese Shop"
    export WORKON_HOME
    source /usr/local/bin/virtualenvwrapper.sh
    deactivate

    if [[ "$OSTYPE" == "linux-gnu" ]]; then
        PYTHON_BIN2=/usr/bin/python2
        PYTHON_BIN3=/usr/bin/python3
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        PYTHON_BIN2=/usr/local/bin/python2
        PYTHON_BIN3=/usr/local/bin/python3
    fi

    # create the virtualenvs if they don't exist
    # if ! workon | grep --quiet '^s2$'; then
    #     mkvirtualenv --system-site-packages -p $PYTHON_BIN2 s2
    # fi
    if ! workon | grep --quiet '^s$'; then
        mkvirtualenv --system-site-packages -p $PYTHON_BIN3 s
    fi

    PYTHON_STABLE="ansible"
    # keep these upgraded
    PYTHON_SCI="jupyter pandas numpy scipy matplotlib nose yanc jedi epc"
    if type workon > /dev/null; then
        workon s
        pip install --upgrade pip
        pip install --upgrade `echo $PYTHON_STABLE`
        pip install --upgrade `echo $PYTHON_SCI`
    fi

}

# get stuff from source
#-----------------------

#--global functions-----
export GIT=~/code

clone_new() {
    NAME=`python -c "import sys; p=sys.argv[1]; print(p.split('/')[-1][:-4])" $1`
    if [ -d $NAME ]
    then
        echo $NAME already installed
    else
        git clone $1
    fi
}
#----------

# prefix doesn't work
get_hub() {
    export PREFIX=$HOME
    cd $GIT/drugi
    clone_new git://github.com/github/hub.git
    cd hub
    rake install
}

get_src() {
    mkdir -p $GIT

    # solarized stuff
    # -----
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
        SLR=${GIT}/drugi/solarized
        mkdir -p $SLR
        cd $SLR
        clone_new https://github.com/sigurdga/gnome-terminal-colors-solarized.git
        clone_new https://github.com/coolwanglu/guake-colors-solarized.git
    fi

    # other
    # -----
    mkdir -p $GIT/drugi
    cd $GIT/drugi
    clone_new https://github.com/rupa/z.git
    get_hub
}

get_zsh() {
    if [ -d ~/.oh-my-zsh ]
    then
        echo "oh-my-zsh already set up"
    else
        echo "setting up oh-my-zsh"
        #wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
        # manual method since I want my own .zsh
        git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
        chsh -s /bin/zsh
    fi
}

get_ruby() {
    #if hash rvm 2>/dev/null; then
    if [ -f ~/.rvm/bin/rvm ]
    then
        echo "rvm already installed."
    else
    echo "installing rvm"
        gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
        \curl -sSL https://get.rvm.io | bash -s stable
    fi
}

# Node.js
get_node_latest() {
    NODEPATH=~/code/drugi/node

    if [ -f ~/.npmrc ]; then
        echo "have .npmrc"
    else
        echo root = $HOME/.local/lib/node_modules | tee -a ~/.npmrc
        echo binroot = $HOME/.local/bin | tee -a ~/.npmrc
        echo manroot = $HOME/.local/share/man | tee -a ~/.npmrc
    fi

    if [ -d $NODEPATH ]; then
        echo "node set up. updating"
        cd $NODEPATH
        git pull
    else
        echo "installing node..."
        git clone https://github.com/joyent/node.git $NODEPATH
        cd $NODEPATH
    fi
    ./configure --prefix=$HOME/.local
    make
    make install
    cd
    ln -s .local/lib/node_modules .node_modules
}

npm_essential_modules() {
    npm -g install yo gulp-cli node-gyp
}

npm_comfy_modules() {
    # current frontend scaffolding solution
    npm -g install generator-fountain-webapp
}

get_node() {
    # revert old installation
    mv ~/.node-modules ~/.node-modules-old
    mv ~/.npmrc ~/.npmrc-old
    # install new
    curl https://raw.github.com/creationix/nvm/master/install.sh | sh
    [ -s $HOME/.nvm/nvm.sh ] && . $HOME/.nvm/nvm.sh # This loads NVM
    # NODE_STABLE=$(curl -s https://semver.io/node/stable)
    NODE_STABLE=$(curl -s https://semver.io/node/resolve/6.x) # LTS
    #NODE_STABLE="v5.3.0" # tmp. until semver gets updated
    nvm install $NODE_STABLE
    nvm use $NODE_STABLE
    nvm alias default $NODE_STABLE
    # TODO: maybe add yarn
    # install some npm modules
    npm_essential_modules
    npm_comfy_modules
}

# Docker
# nije bas dobro - instaliram globalno iz paketa
get_docker() {
    if [ -d ${GOPATH}/src/github.com/dotcloud ]
    then
        echo "docker already installed"
    else
        echo "installing docker..."
        mkdir -p $GOPATH/src/github.com/dotcloud
        cd $GOPATH/src/github.com/dotcloud
        git clone git://github.com/dotcloud/docker.git
        cd docker
        go get -v github.com/dotcloud/docker/...
        go install -v github.com/dotcloud/docker/...
    fi
}


# Call all the functions
#-----------------------

install_non_sudo() {
    get_zsh
    get_ruby
    cheese_shop
    #get_docker
    get_node
    get_src
}

echo "Instulling stuff as a *local* user..."

install_non_sudo

echo "Done."
echo $HOME
pwd
echo $PATH
exit
